name: Release Tracikpy

on:
  push:
    branches:
      - main

jobs:
  formatting:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Formatting
      run: |
        python -m pip install --upgrade pip
        pip install black flake8
    - name: Check Formatting
      run: |
        flake8 --config=.flake8 .
        black -l 79 --check .

  tests:
    name: Run Unit Tests
    needs: formatting
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest]
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install System Deps
      run: |
        sudo apt-get update
        sudo apt-get install -y libeigen3-dev liborocos-kdl-dev libkdl-parser-dev liburdf-dev libnlopt-dev libnlopt-cxx-dev
    - name: Install Tracikpy and Pytest
      run: pip install .[test] coveralls
    - name: Run Tests
      run: pytest --cov=tracikpy tests/
    - name: Coverage Report
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == 3.6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: coveralls --service=github
  
  release:
    name: Create GitHub Release
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          fetch-depth: 2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v5.1
      - name: Tag Version
        if: contains(steps.changed-files.outputs.modified_files, 'tracikpy/version.py')
        id: set_tag
        run: |
          export VER=$(python -c "exec(open('tracikpy/version.py','r').read());print(__version__)")
          echo "::set-output name=tag_name::${VER}"
      - name: Create Release
        if: contains(steps.changed-files.outputs.modified_files, 'tracikpy/version.py')
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.set_tag.outputs.tag_name }}
          release_name: Release ${{ steps.set_tag.outputs.tag_name }}
          draft: false
          prerelease: false